---
interface Episode {
  id: string;
  number: number;
  title: string;
  thumbnail: string;
  youtubeId: string;
  youtubeUrl: string;
  appleUrl: string;
  spotifyUrl: string;
  guests: Array<{ name: string; social: string | null }>;
  isRoundup: boolean;
  publishDate?: string;
  displayDate?: string;
}

interface Props {
  episodes: Episode[];
}

const { episodes } = Astro.props;
---

<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6" id="episodes-grid">
  {episodes.map((episode) => (
    <div
      class="episode-card bg-white rounded-lg shadow-lg overflow-hidden cursor-pointer transform transition-all duration-300 hover:scale-105 hover:shadow-xl"
      data-episode-id={episode.id}
    >
      <!-- Thumbnail -->
      <div class="aspect-video relative overflow-hidden bg-gray-200">
        <img
          src={episode.thumbnail}
          alt={`Episode ${episode.number}: ${episode.title}`}
          loading={episode.number <= 6 ? "eager" : "lazy"}
          class="w-full h-full object-cover"
        />
        <!-- Play Button Overlay -->
        <div class="absolute inset-0 flex items-center justify-center opacity-0 hover:opacity-100 transition-opacity duration-300 bg-black bg-opacity-50">
          <div class="bg-white rounded-full p-4">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-red-600" viewBox="0 0 24 24" fill="currentColor">
              <path d="M8 5v14l11-7z"/>
            </svg>
          </div>
        </div>
      </div>

      <!-- Episode Info -->
      <div class="p-4">
        <h3 class="font-bold text-lg text-gray-900 mb-2 line-clamp-2">
          {episode.title}
        </h3>
        {episode.displayDate && (
          <p class="text-xs text-gray-500 mb-1">{episode.displayDate}</p>
        )}
        {!episode.isRoundup && episode.guests.length > 0 && (
          <p class="text-sm text-gray-600 line-clamp-1">
            with {episode.guests.map(g => g.name).join(', ')}
          </p>
        )}
        {episode.isRoundup && (
          <p class="text-sm text-gray-600">Roundup Episode</p>
        )}
      </div>
    </div>
  ))}
</div>

<style>
  .line-clamp-1 {
    overflow: hidden;
    display: -webkit-box;
    -webkit-line-clamp: 1;
    -webkit-box-orient: vertical;
  }

  .line-clamp-2 {
    overflow: hidden;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
  }
</style>

<script define:vars={{ episodes }}>
  document.addEventListener('DOMContentLoaded', () => {
    const cards = document.querySelectorAll('.episode-card');

    cards.forEach((card) => {
      card.addEventListener('click', () => {
        const episodeId = card.dataset.episodeId;
        const event = new CustomEvent('open-episode-lightbox', {
          detail: { episodeId }
        });
        window.dispatchEvent(event);
      });
    });
  });
</script>